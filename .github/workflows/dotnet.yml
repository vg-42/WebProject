# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
# comment
name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: Self-Hosted
    steps:
    - name: checkout repo
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x
        
    - name: clean Dependencies
      run: dotnet clean
      working-directory: C:\VG\Project\runner\actions-runner\_work\WebProject\WebProject
      
    - name: Restore Dependencies
      run: dotnet restore
      working-directory: C:\VG\Project\runner\actions-runner\_work\WebProject\WebProject
      
    - name: Build Solution
      run: dotnet build --configuration Release
      working-directory: C:\VG\Project\runner\actions-runner\_work\WebProject\WebProject
      
    - name: Publish
      run: dotnet publish --configuration Release --output publish
      working-directory: C:\VG\Project\runner\actions-runner\_work\WebProject\WebProject

    - name: Zip Publish Folder
      if: ${{ success() }}
      run: Compress-Archive -Path "C:\VG\Project\runner\actions-runner\_work\WebProject\WebProject\publish/*" -DestinationPath "C:\VG\Project\artifact" -Force

    - name: Stop Specific IIS Website
      run: |
        $appPoolName = 'webproject'
        Import-Module WebAdministration
        Stop-WebAppPool -Name $appPoolName
        PowerShell -Command "Stop-Website -Name 'webproject'"
        Start-Sleep -Seconds 20

    - name: Unzip Artifact
      run: Expand-Archive -Path "C:\VG\Project\artifact" -DestinationPath "C:\VG\Project\publish" -Force
    
    - name: Stop Specific IIS Website
      run: |
        Start-Sleep -Seconds 20
        $appPoolName = 'webproject'
        Import-Module WebAdministration
        Start-WebAppPool -Name $appPoolName
        PowerShell -Command "Start-Website -Name 'webproject'"
        
    


